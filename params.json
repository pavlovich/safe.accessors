{"name":"Safeaccessors","tagline":"Provide a clean way to 'safely' get and set nested attribute values","body":"<span class=\"github-only\">\r\n\r\nThe stable release documentation can be found here https://pavlovich.github.io/safeaccessors/\r\n\r\n</span>\r\n\r\n# safeaccessors [![Build Status](https://secure.travis-ci.org/pavlovich/safeaccessors.png?branch=master)](http://travis-ci.org/pavlovich/safeaccessors) #\r\n\r\nJavascript lacks a way to safely get and set values of nested attributes or a way to call functions with value retrieved from a nested structure.\r\nThis is an attempt to fill that gap. \r\n\r\n[c]: https://github.com/pavlovich/safeaccessors/blob/master/CHANGELOG.markdown#300\r\n\r\n## Usage\r\n\r\n### In Node.js and Browserify\r\n\r\nInstall from npm\r\n\r\n    npm install safeaccessors\r\n\r\nRequire individual functions\r\n\r\n```javascript\r\nvar safeGet = require(\"safeaccessors/safeGet\");\r\n\r\nsafeGet(myObj, \"x.y.z.a.b.c\", default, allowNull);\r\n// => xxx\r\n```\r\n\r\nor load the full library to enable chaining\r\n\r\n```javascript\r\nvar sa = require(\"safeaccessors\");\r\n\r\nsa(x).trim().capitalize().value();\r\n// => \"xxx\"\r\n```\r\n\r\nbut especially when using with [Browserify][] the individual function approach\r\nis recommended because using it you only add those functions to your bundle you\r\nuse.\r\n\r\n[Browserify]: http://browserify.org/\r\n\r\n### In Meteor\r\n\r\nFrom your [Meteor][] project folder\r\n\r\n```shell\r\n    meteor add safeaccessors:safeaccessors\r\n```\r\n\r\nand you'll be able to access the library with the ***sa*** global from both the server and the client.\r\n\r\n```javascript\r\n\r\nvar allowNulls = false;\r\nsa.safeGet(obj, 'a.b.c.d.e', 'default value', allowNulls);\r\n// => default value\r\n\r\ns(\"   epeli  \").trim().capitalize().value();\r\n// => \"Epeli\"\r\n```\r\n\r\n[Meteor]: http://www.meteor.com/\r\n\r\n### Others\r\n\r\nThe `dist/underscore.string.js` file is an [UMD][] build. You can load it using\r\nan AMD loader such as [RequireJS][] or just stick it to a web page and access\r\nthe library from the ***s*** global.\r\n\r\n[UMD]: https://github.com/umdjs/umd\r\n[RequireJS]: http://requirejs.org/\r\n\r\n### Underscore.js/Lo-Dash integration\r\n\r\nIt is possible use as Underscore.js/Lo-Dash extension\r\n\r\n```javascript\r\n_.mixin(sa.exports());\r\n```\r\n\r\n## Download\r\n\r\n  * [Development version](https://raw.github.com/pavlovich/safeaccessors/master/dist/safeaccessors.js) *Uncompressed with Comments*\r\n  * [Production version](https://github.com/pavlovich/safeaccessors/raw/master/dist/safeaccessors.min.js) *Minified*\r\n\r\n## API\r\n\r\n### Individual functions\r\n\r\n#### safeGet(object, [ path='', defaultValue=null, allowNulls=false]) => object\r\n\r\nTraverses the supplied chain of attributes of the provided object until it reaches the target (final) attribute or hits a 'null'. If it successfully reaches the end, the value of the final attribute is returned. If a null is encountered or if the final value is null, then, if nulls are allowed, a null is returned. Otherwise, the default value is returned.\r\n\r\n```javascript\r\nsafeGet({something: {somethingElse: {theFinalAttribute: 'hello'}, 'something.somethingElse.theFinalAttribute', 'default value', false);\r\n// => \"hello\"\r\n\r\nsafeGet({something: {somethingElse: {theFinalAttribute: 'hello'}, 'something.somethingElseXX.theFinalAttributeXXX', 'default value');\r\n// => \"default value\"\r\n\r\nsafeGet({something: {somethingElse: {theFinalAttribute: null}, 'something.somethingElse.theFinalAttribute', 'default value', true);\r\n// => null\r\n```\r\n\r\n\r\n#### safeSet(object, [ path='' ]) => object\r\n\r\nSets the value of the given path relative to the supplied object to the provided value.\r\n\r\n```javascript\r\nsafeSet({}, \"a.b.c.d\", 'hello');\r\n// => 'hello'\r\n\r\nsafeSet({a: {b: {c: {d: 'yes'}}}}, \"a.b.c.d\", 'hello');\r\n// => 'hello'\r\n\r\nsafeSet({a: {b: {c: {d: 'yes'}}}}, \"a.b.c.d\", 'hello', false);\r\n// => 'yes'\r\n\r\n```\r\n\r\n#### safeCall(object, [path='', defaultValue, functionToCall, context, allowNull, allowUndefined, defaultReturn, allowNullResult, allowUndefinedResult]) => string\r\n\r\nConverts first letter of the string to uppercase. If `true` is passed as second argument the rest\r\nof the string will be converted to lower case.\r\n\r\n```javascript\r\nsafeCall(\"foo Bar\");\r\n// => \"Foo Bar\"\r\n\r\nsafeCall(\"FOO Bar\", true);\r\n// => \"Foo bar\"\r\n```\r\n\r\n#### isVoid(object) => boolean\r\n\r\nReturns true if the supplied object is undefined or null, false otherwise.\r\n\r\n```javascript\r\nisVoid(\"hello\");\r\n// => false\r\n\r\nisVoid(null);\r\n// => true\r\n\r\nisVoid(undefined);\r\n// => true\r\n```\r\n\r\n## Maintainers ##\r\n\r\nThis library is maintained by\r\n\r\n  - Peter Pavlovich â€“ ***[@pavlovich](https://github.com/pavlovich)***\r\n  \r\n## Licence ##\r\n\r\nThe MIT License\r\n\r\nCopyright (c) 2015 Peter Pavlovich pavlovich@gmail.com\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}